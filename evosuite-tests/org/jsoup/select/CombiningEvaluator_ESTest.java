/*
 * This file was automatically generated by EvoSuite
 * Sun Feb 21 19:48:20 GMT 2021
 */

package org.jsoup.select;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.LinkedHashSet;
import java.util.regex.Pattern;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.CDataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.parser.Tag;
import org.jsoup.select.CombiningEvaluator;
import org.jsoup.select.Evaluator;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CombiningEvaluator_ESTest extends CombiningEvaluator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Evaluator[] evaluatorArray0 = new Evaluator[2];
      Evaluator.IsRoot evaluator_IsRoot0 = new Evaluator.IsRoot();
      evaluatorArray0[0] = (Evaluator) evaluator_IsRoot0;
      CombiningEvaluator.Or combiningEvaluator_Or0 = new CombiningEvaluator.Or(evaluatorArray0);
      Document document0 = new Document("8CB: b'BF}QWs;~&");
      Element element0 = document0.createElement("8CB: b'BF}QWs;~&");
      boolean boolean0 = combiningEvaluator_Or0.matches(element0, element0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CombiningEvaluator.Or combiningEvaluator_Or0 = new CombiningEvaluator.Or();
      Tag tag0 = Tag.valueOf("Zd4h]");
      CDataNode cDataNode0 = new CDataNode("");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "org.jsoup.select.StructuralEvaluator$Has", attributes0);
      Evaluator.IsLastOfType evaluator_IsLastOfType0 = new Evaluator.IsLastOfType();
      combiningEvaluator_Or0.add(evaluator_IsLastOfType0);
      boolean boolean0 = combiningEvaluator_Or0.matches(formElement0, formElement0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LinkedHashSet<Evaluator> linkedHashSet0 = new LinkedHashSet<Evaluator>();
      Evaluator.MatchText evaluator_MatchText0 = new Evaluator.MatchText();
      linkedHashSet0.add(evaluator_MatchText0);
      CombiningEvaluator.And combiningEvaluator_And0 = new CombiningEvaluator.And(linkedHashSet0);
      Document document0 = Document.createShell("");
      boolean boolean0 = combiningEvaluator_And0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Evaluator[] evaluatorArray0 = new Evaluator[1];
      Pattern pattern0 = Pattern.compile("", 1);
      Evaluator.MatchesOwn evaluator_MatchesOwn0 = new Evaluator.MatchesOwn(pattern0);
      evaluatorArray0[0] = (Evaluator) evaluator_MatchesOwn0;
      CombiningEvaluator.And combiningEvaluator_And0 = new CombiningEvaluator.And(evaluatorArray0);
      Document document0 = Document.createShell("org.jsoup.select.CombiningEvaluator");
      combiningEvaluator_And0.matches(document0, document0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Evaluator[] evaluatorArray0 = new Evaluator[1];
      CombiningEvaluator.Or combiningEvaluator_Or0 = new CombiningEvaluator.Or(evaluatorArray0);
      Evaluator evaluator0 = combiningEvaluator_Or0.rightMostEvaluator();
      assertNull(evaluator0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Evaluator[] evaluatorArray0 = new Evaluator[0];
      CombiningEvaluator.Or combiningEvaluator_Or0 = new CombiningEvaluator.Or(evaluatorArray0);
      Evaluator evaluator0 = combiningEvaluator_Or0.rightMostEvaluator();
      assertNull(evaluator0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Evaluator[] evaluatorArray0 = new Evaluator[2];
      Evaluator.IsRoot evaluator_IsRoot0 = new Evaluator.IsRoot();
      evaluatorArray0[0] = (Evaluator) evaluator_IsRoot0;
      CombiningEvaluator.And combiningEvaluator_And0 = new CombiningEvaluator.And(evaluatorArray0);
      evaluatorArray0[1] = (Evaluator) combiningEvaluator_And0;
      CombiningEvaluator.Or combiningEvaluator_Or0 = new CombiningEvaluator.Or(evaluatorArray0);
      String string0 = combiningEvaluator_Or0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      CombiningEvaluator.Or combiningEvaluator_Or0 = new CombiningEvaluator.Or();
      ArrayList<Evaluator> arrayList0 = new ArrayList<Evaluator>();
      CombiningEvaluator.And combiningEvaluator_And0 = new CombiningEvaluator.And(arrayList0);
      // Undeclared exception!
      try { 
        combiningEvaluator_Or0.replaceRightMostEvaluator(combiningEvaluator_And0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }
}
