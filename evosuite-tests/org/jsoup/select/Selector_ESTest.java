/*
 * This file was automatically generated by EvoSuite
 * Sun Feb 21 19:46:54 GMT 2021
 */

package org.jsoup.select;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;
import org.jsoup.select.Evaluator;
import org.jsoup.select.Selector;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Selector_ESTest extends Selector_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Document document0 = Document.createShell("");
      Elements elements0 = document0.getElementsContainingText("");
      Elements elements1 = document0.getElementsByAttributeValueStarting("dg1=gUhAuee^>.8 W6", "dg1=gUhAuee^>.8 W6");
      Elements elements2 = Selector.filterOut(elements0, elements1);
      assertEquals(4, elements2.size());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Evaluator.AttributeWithValueNot evaluator_AttributeWithValueNot0 = new Evaluator.AttributeWithValueNot("org.jsoup.nodes.Document", "+ jjd");
      Document document0 = Document.createShell("org.jsoup.nodes.Document");
      Elements elements0 = Selector.select((Evaluator) evaluator_AttributeWithValueNot0, (Element) document0);
      Elements elements1 = Selector.filterOut(elements0, elements0);
      assertEquals(0, elements1.size());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Document document0 = new Document("1.0");
      // Undeclared exception!
      try { 
        Selector.selectFirst("PcK#DYGwps8fP\u0002", document0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query 'PcK#DYGwps8fP\u0002': unexpected token at '\u0002'
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Document document0 = Document.createShell("'1[");
      Elements elements0 = document0.getElementsByAttributeValueNot(",Q", ":first-child");
      Elements elements1 = Selector.select(":first-child", (Iterable<Element>) elements0);
      assertEquals(1, elements1.size());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try { 
        Selector.select("'", (Element) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query ''': unexpected token at '''
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }
}
