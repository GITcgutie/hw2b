/*
 * This file was automatically generated by EvoSuite
 * Sun Feb 21 20:08:38 GMT 2021
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.charset.Charset;
import java.nio.charset.CharsetEncoder;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Entities;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Document_ESTest extends Document_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document_OutputSettings0.indentAmount(2);
      assertEquals(2, document_OutputSettings0.indentAmount());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document_OutputSettings0.indentAmount((-3694));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Must be true
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings.Syntax document_OutputSettings_Syntax0 = Document.OutputSettings.Syntax.xml;
      document_OutputSettings0.syntax(document_OutputSettings_Syntax0);
      Document document0 = Document.createShell("org.jsoup.nodes.Document$QuirksMode");
      document0.outputSettings(document_OutputSettings0);
      Charset charset0 = Charset.defaultCharset();
      document0.charset(charset0);
      document0.charset(charset0);
      assertEquals(2, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings.Syntax document_OutputSettings_Syntax0 = Document.OutputSettings.Syntax.xml;
      document_OutputSettings0.syntax(document_OutputSettings_Syntax0);
      Document document0 = new Document("v-h'GZlBvK56'");
      Document document1 = document0.normalise();
      document1.outputSettings(document_OutputSettings0);
      Charset charset0 = Charset.defaultCharset();
      document1.charset(charset0);
      assertEquals(2, document1.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document_OutputSettings0.syntax((Document.OutputSettings.Syntax) null);
      Document document0 = Document.createShell("body");
      Document document1 = document0.outputSettings(document_OutputSettings0);
      assertFalse(document1.updateMetaCharsetElement());
      
      Charset charset0 = Charset.defaultCharset();
      document0.charset(charset0);
      assertTrue(document0.updateMetaCharsetElement());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Document document0 = Document.createShell("b");
      assertFalse(document0.updateMetaCharsetElement());
      
      Charset charset0 = Charset.defaultCharset();
      document0.charset(charset0);
      document0.charset(charset0);
      assertTrue(document0.updateMetaCharsetElement());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Document document0 = new Document("p7ok(x0EA");
      document0.appendText("");
      document0.normalise();
      assertEquals(2, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Document document0 = new Document("y     i      M    ");
      Document document1 = (Document)document0.appendText("y     i      M    ");
      document1.normalise();
      assertEquals(1, document0.childNodeSize());
      assertEquals("y     i      M    ", document0.location());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Document document0 = Document.createShell("novalidate");
      Document document1 = document0.normalise();
      assertEquals(1, document1.childNodeSize());
      assertFalse(document1.updateMetaCharsetElement());
      assertEquals("#document", document1.nodeName());
      assertEquals("novalidate", document1.location());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Document document0 = Document.createShell("Bwg_X89:q{~");
      document0.title("JTK*wVcBA%6np");
      document0.title("article");
      assertEquals("#document", document0.nodeName());
      assertEquals("Bwg_X89:q{~", document0.location());
      assertFalse(document0.updateMetaCharsetElement());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Document document0 = Document.createShell("");
      document0.title("}8i/M1hS8H9>$j[]i");
      String string0 = document0.title();
      assertEquals("}8i/M1hS8H9>$j[]i", string0);
      assertEquals("#document", document0.nodeName());
      assertFalse(document0.updateMetaCharsetElement());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Document document0 = Document.createShell("<!--");
      document0.title();
      assertEquals("<!--", document0.location());
      assertFalse(document0.updateMetaCharsetElement());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Document document0 = new Document("dl3B&r~2");
      String string0 = document0.location();
      assertFalse(document0.updateMetaCharsetElement());
      assertEquals("dl3B&r~2", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Document document0 = new Document("p7ok(x0EA");
      boolean boolean0 = document0.updateMetaCharsetElement();
      assertFalse(boolean0);
      assertEquals("p7ok(x0EA", document0.location());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Document document0 = Document.createShell("");
      document0.quirksMode();
      assertFalse(document0.updateMetaCharsetElement());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Document document0 = Document.createShell("aI]{v7JZF?");
      Document document1 = (Document)document0.text("aI]{v7JZF?");
      assertEquals("#document", document1.nodeName());
      assertEquals("aI]{v7JZF?", document1.location());
      assertFalse(document1.updateMetaCharsetElement());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Document document0 = new Document("");
      document0.createElement("~0A5!$$j");
      assertFalse(document0.updateMetaCharsetElement());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Document document0 = new Document("v-h'GZlBvK56'");
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.quirks;
      Document document1 = document0.quirksMode(document_QuirksMode0);
      assertFalse(document1.updateMetaCharsetElement());
      assertEquals("v-h'GZlBvK56'", document1.location());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      int int0 = document_OutputSettings0.indentAmount();
      assertTrue(document_OutputSettings0.prettyPrint());
      assertEquals(1, int0);
      assertFalse(document_OutputSettings0.outline());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      boolean boolean0 = document_OutputSettings0.outline();
      assertTrue(document_OutputSettings0.prettyPrint());
      assertEquals(1, document_OutputSettings0.indentAmount());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Entities.EscapeMode entities_EscapeMode0 = Entities.EscapeMode.extended;
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.escapeMode(entities_EscapeMode0);
      assertTrue(document_OutputSettings1.prettyPrint());
      assertEquals(1, document_OutputSettings1.indentAmount());
      assertFalse(document_OutputSettings1.outline());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Document document0 = new Document("v-h'GZlBvK56'");
      assertFalse(document0.updateMetaCharsetElement());
      
      Charset charset0 = Charset.defaultCharset();
      document0.charset(charset0);
      assertTrue(document0.updateMetaCharsetElement());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document_OutputSettings0.encoder();
      CharsetEncoder charsetEncoder0 = document_OutputSettings0.encoder();
      assertFalse(document_OutputSettings0.outline());
      assertEquals(1, document_OutputSettings0.indentAmount());
      assertTrue(document_OutputSettings0.prettyPrint());
      assertNotNull(charsetEncoder0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Document document0 = new Document("p7ok(x0EA");
      document0.toString();
      assertEquals("p7ok(x0EA", document0.location());
      assertFalse(document0.updateMetaCharsetElement());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.outline(false);
      assertEquals(1, document_OutputSettings1.indentAmount());
      assertTrue(document_OutputSettings1.prettyPrint());
      assertFalse(document_OutputSettings0.outline());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      assertTrue(document_OutputSettings0.prettyPrint());
      
      document_OutputSettings0.prettyPrint(false);
      assertFalse(document_OutputSettings0.prettyPrint());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Document document0 = Document.createShell("");
      Document document1 = document0.clone();
      assertFalse(document1.updateMetaCharsetElement());
      assertNotSame(document1, document0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document_OutputSettings0.escapeMode();
      assertFalse(document_OutputSettings0.outline());
      assertEquals(1, document_OutputSettings0.indentAmount());
      assertTrue(document_OutputSettings0.prettyPrint());
  }
}
